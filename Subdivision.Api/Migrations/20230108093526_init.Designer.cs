// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Subdivision.Api.Models;

#nullable disable

namespace Subdivision.Api.Migrations
{
    [DbContext(typeof(SubdivisionDbContext))]
    [Migration("20230108093526_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Subdivision.Api.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Subdivision.Api.Models.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Village", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MunicipalityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("Subdivision.Api.Models.District", b =>
                {
                    b.HasOne("Subdivision.Api.Models.Region", null)
                        .WithMany("Districts")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Municipality", b =>
                {
                    b.HasOne("Subdivision.Api.Models.District", null)
                        .WithMany("Municipality")
                        .HasForeignKey("DistrictId");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Region", b =>
                {
                    b.HasOne("Subdivision.Api.Models.Country", null)
                        .WithMany("Regions")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Village", b =>
                {
                    b.HasOne("Subdivision.Api.Models.Municipality", null)
                        .WithMany("Villages")
                        .HasForeignKey("MunicipalityId");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Subdivision.Api.Models.District", b =>
                {
                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Municipality", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("Subdivision.Api.Models.Region", b =>
                {
                    b.Navigation("Districts");
                });
#pragma warning restore 612, 618
        }
    }
}
